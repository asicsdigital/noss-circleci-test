version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3
    steps:
      - checkout
      - run:
          name: git tag -l
          command: git tag -l
      - run:
          name: echo tag and branch
          command: |
            # setup empty workspace for persisting DOCKER_BUILD_TAG
            mkdir -p /tmp/workspace
            echo > /tmp/workspace/image_tag
            # setup proper tags
            if [[ "$CIRCLE_BRANCH" = "master" && "$CIRCLE_TAG" ]]; then
              DOCKER_TAG=latest
              DOCKER_BUILD_TAG=$CIRCLE_TAG
            elif [[ "$CIRCLE_BRANCH" = "master" ]]; then
              DOCKER_TAG=latest
              DOCKER_BUILD_TAG="build-${CIRCLE_BUILD_NUM}"
            elif [[ "$CIRCLE_TAG" ]]; then
              DOCKER_TAG=$CIRCLE_TAG
              if [[ $CIRCLE_TAG =~ ^deploy-dev- ]]; then
                DOCKER_TAG=deploy-dev
                DOCKER_BUILD_TAG=$CIRCLE_TAG
              elif [[ $CIRCLE_TAG =~ ^deploy-staging- ]]; then
                DOCKER_TAG=deploy-staging
                DOCKER_BUILD_TAG=$CIRCLE_TAG
              fi
            elif [[ "$CIRCLE_BRANCH" = "deploy-prod" ]]; then
              DOCKER_TAG=deploy-prod
              DOCKER_BUILD_TAG="deploy-prod-build-${CIRCLE_BUILD_NUM}"
            else
              DOCKER_TAG=$CIRCLE_BRANCH
              DOCKER_BUILD_TAG="${CIRCLE_BRANCH}-build-${CIRCLE_BUILD_NUM}"
            fi
            # process tags
            echo "docker tag is: ${DOCKER_TAG}"
            if [[ "$DOCKER_BUILD_TAG" ]]; then
              # persist DOCKER_BUILD_TAG
              echo "docker build tag is: ${DOCKER_BUILD_TAG}"
              echo $DOCKER_BUILD_TAG > /tmp/workspace/image_tag
            fi
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - image_tag
  deploy-dev:
    docker:
      - image: circleci/python:3
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Placeholder for deploy dev
          command: |
            IMAGE_TAG=$(cat /tmp/workspace/image_tag)
            if [[ ! "$IMAGE_TAG" ]]; then
              echo "could not read image tag from workspace"
              exit 1
            fi
            echo "triggering circle ci build that would deploy image: ${IMAGE_TAG} to dev environment"
            RETURN=$(curl -u ${CIRCLE_API_TOKEN}: \
              --data build_parameters[CIRCLE_JOB]=deploy-dev \
              --data build_parameters[IMAGE_TAG]=${IMAGE_TAG} \
              https://circleci.com/api/v1.1/project/github/FitnessKeeper/noss-circleci-test2/tree/master)
            echo $RETURN | python3 -m json.tool
            BUILD_URL=$(echo $RETURN | python3 -c "import sys, json; print(json.load(sys.stdin)['build_url'])")
            echo "check ${BUILD_URL} for deploy status"
  deploy-staging:
    docker:
      - image: circleci/python:3
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Placeholder for deploy staging
          command: |
            IMAGE_TAG=$(cat /tmp/workspace/image_tag)
            if [[ ! "$IMAGE_TAG" ]]; then
              echo "could not read image tag from workspace"
              exit 1
            fi
            echo "triggering circle ci build that would deploy image: ${IMAGE_TAG} to staging environment"
            RETURN=$(curl -u ${CIRCLE_API_TOKEN}: \
              --data build_parameters[CIRCLE_JOB]=deploy-staging \
              --data build_parameters[IMAGE_TAG]=${IMAGE_TAG} \
              https://circleci.com/api/v1.1/project/github/FitnessKeeper/noss-circleci-test2/tree/master)
            echo $RETURN | python3 -m json.tool
            BUILD_URL=$(echo $RETURN | python3 -c "import sys, json; print(json.load(sys.stdin)['build_url'])")
            echo "check ${BUILD_URL} for deploy status"
  deploy-prod:
    docker:
      - image: circleci/python:3
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Placeholder for deploy prod
          command: |
            IMAGE_TAG=$(cat /tmp/workspace/image_tag)
            if [[ ! "$IMAGE_TAG" ]]; then
              echo "could not read image tag from workspace"
              exit 1
            fi
            echo "triggering circle ci build that would deploy image: ${IMAGE_TAG} to prod"
            RETURN=$(curl -u ${CIRCLE_API_TOKEN}: \
              --data build_parameters[CIRCLE_JOB]=deploy-prod \
              --data build_parameters[IMAGE_TAG]=${IMAGE_TAG} \
              https://circleci.com/api/v1.1/project/github/FitnessKeeper/noss-circleci-test2/tree/master)
            echo $RETURN | python3 -m json.tool
            BUILD_URL=$(echo $RETURN | python3 -c "import sys, json; print(json.load(sys.stdin)['build_url'])")
            echo "check ${BUILD_URL} for deploy status"

workflows:
  version: 2
  build:
    jobs:
      - build
      - deploy-dev:
          requires:
            - build
          filters:
            tags:
              only: /^deploy-dev-.+/
            branches:
              ignore: /.*/
      - deploy-staging:
          requires:
            - build
          filters:
            tags:
              only: /^deploy-staging-.+/
            branches:
              ignore: /.*/
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: deploy-prod
